Approach number 2

XML Configuration

1. Name of the bean is name of the class when using @component
2. @Value annotation - 1. Internally when you have basic constructor, ioc constructor will create a parameterized constructor
 and not through setter method, when we use @Value
3.Spring expression language - (@Value ("${object.attributename}")) , we need to define key in properties file.
and then use this syntax.
4. only one object gets created (singleton), so even if you'll create multiple objects you will get the same values.
5. so when you want to create new object everytime, you use,
@Scope(value="prototype") 
6. @Autowired - does constructor injection, atribute level dependency injection.
1st it will find constructor, do it's injection, if not found
2nd it will go for setter method , if not found, 
3rd attribute level injection.
it is not necessary to write @Autowired but as a practice we perform constructor level dependency injection and we mention
@autowired for better visibility of the code.(does not make IoC constructor busy)



Approach number 3

1. No Xml file , pure java based

Java Configuration class
@Configuration , @Bean , @ComponentScan
2.maven project - quickstart arhchtype maven--> project
3.copy all dependencies from pom file
4. ApplicationContext context = new AnnotationConfigApplicationContext(MyConfig.class)
5. Name of the bean must be name of the method
